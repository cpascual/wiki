==Time-of-Flight Working Group==
*[[User:Freddie Akeroyd|Freddie Akeroyd]]
*[[User:Franck Cecillon|Franck Cecillon]]
*[[User:Ray Osborn|Ray Osborn]]
*[[User:Peter Peterson|Peter Peterson]]
*[[User:Thomas Proffen|Thomas Proffen]]
*[[User:Jiro Suzuki|Jiro Suzuki]]

This group was charged with discussing matters arising from the [[TOFRaw|NXTOFRW  - NeXus Time-of-Flight Raw File Format (simple sit and count case)]] proposal in preparation for a full group discussion.

==Summary of main proposals in [[TOFRaw]]==

# Some new meta-data names in NXentry for archiving and cataloguing of data
# Some thoughts about scans (now moved to [[TOFRawScan|NXTOFRWSC]] and being considered by the [[Scanning Group]])
# General and Area detector specific NXdetector
# Additional options for specifying pixel geometry with area detectors (edges, corners, etc.) 
# New NXdetector_groups class for logically grouping and labelling detector elements
# Representing hardware ganging of detectors

==General and Area detector specific NXdetector==

===Inheritance of definitions===

To aid with making definitions clearer we spent some time considereing an inheritance system for NeXus. One method would be to use a period (.) in a class name to denote inheritance and so define classes called NXdetector.area and NXdetector.point which would imply they inherited from NXdetector. The API would need a minor change so that is you asked for '''getnext("NXdetector")''' it would not look for an exact match of this string, but look for any NeXus class that started with the prefix "detector" and so would return either an NXdetector.area or NXdetector.point etc. By using this (.) method the reading API does not need to know about separately about the inheritance structure as it is encoded in the name of the item when it is written by the API.

Though we would not introduce such inheritance into the API at thois instance, it is something that is needed. For the moment we will just have an NXdetector with the '''layout'''  variable indicating the type (area, point or linear)

== NXdetector ==

Three types: point, linear and area

== NXdetector.point ==

A collection of pixels '''i''' over some surface. Defined by:

polar_angle[i]
distance[i]
solid_angle[i]

If desired, additional information about pixels (shape, engineering position) can be added via an NXgeometry[i]

== NXdetector.linear ==
NXgeometry[i] defines tube centre and
pixel_edge[j+1] defines the edges of the pixels - if a pixel_size[j] array is also present it means the pixels have "dead space" between them  

== NXdetector.area ==

NXgeometry defines tube centre
xoffet[i+1] and yoffset[j+1] defines edges of pixels




==Proposals==

# That the new data items in required in NXentry and NXuser for archiving be ratified. [[User:L.lerusse|Laurent Lerusse]] has volunteered to produce a description such that any instruement definition that wishes can "conform to" this.
# That NeXus implement inheritance in definitions and classes by a method yet to be finalised.